Перем юТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
    юТест = ЮнитТестирование;

    ВсеТесты = Новый Массив;
    ВсеТесты.Добавить("ТестДолжен_ПроверитьМассив");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьДобавление");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьУдаление");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьУстановить");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьВставку");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьНайти");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьВГраница");

    Возврат ВсеТесты;

КонецФункции

Процедура ТестДолжен_ПроверитьМассив() Экспорт

    Массив = Новый Массив;

    юТест.ПроверитьТип(Массив, "Массив");
    юТест.ПроверитьРавенство(Массив.Количество(), 0);

    Массив.Добавить(1);
    Массив.Добавить("Строка");
    Массив.Добавить(Новый Массив);

    юТест.ПроверитьРавенство(Массив.Количество(), 3);

    Массив.Очистить();

    юТест.ПроверитьРавенство(Массив.Количество(), 0);

    Массив.Добавить(10);
    Массив[0] = 101;
    юТест.ПроверитьРавенство(Массив[0], 101);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьДобавление() Экспорт
    Число = 1;
    Строка = "";
    Тип = Тип("Строка");

    Массив = Новый Массив;
    Массив.Добавить(Число);
    Массив.Добавить(Число);
    Массив.Добавить(Строка);
    Массив.Добавить(Тип);

    юТест.ПроверитьРавенство(Массив[0], Число);
    юТест.ПроверитьРавенство(Массив[1], Число);
    юТест.ПроверитьРавенство(Массив[2], Строка);
    юТест.ПроверитьРавенство(Массив[3], Тип);

    ЗначениеИзМассива = Массив[0];
    юТест.ПроверитьРавенство(ЗначениеИзМассива, 1);
КонецПроцедуры

Процедура ТестДолжен_ПроверитьУдаление() Экспорт

    Массив = Новый Массив;
    Массив.Добавить(1);
    Массив.Добавить(2);

    юТест.ПроверитьРавенство(Массив.Количество(), 2);

    Массив.Удалить(1);
    юТест.ПроверитьРавенство(Массив.Количество(), 1);

    Массив.Удалить(0);
    юТест.ПроверитьРавенство(Массив.Количество(), 0);

    Массив = Новый Массив;
    Массив.Добавить(1);
    Массив.Добавить(2);
    Массив.Добавить(3);

    Массив.Удалить(0);
    Массив.Удалить(0);
    Массив.Удалить(0);

    юТест.ПроверитьРавенство(Массив.Количество(), 0);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьУстановить() Экспорт

    Массив = Новый Массив;
    Массив.Добавить(1);

    Массив.Установить(0, 2);
    юТест.ПроверитьРавенство(Массив[0], 2);

    БылоИсключение = Ложь;
    Попытка
        Массив.Установить(-1, 2);
    Исключение
        БылоИсключение = Истина;
    КонецПопытки;
    юТест.ПроверитьРавенство(БылоИсключение, Истина);

    БылоИсключение = Ложь;
    Попытка
       Массив.Установить(10, 2);
    Исключение
       БылоИсключение = Истина;
    КонецПопытки;
    юТест.ПроверитьРавенство(БылоИсключение, Истина);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьВставку() Экспорт

    Массив = Новый Массив;
    Массив.Добавить(1);
    Массив.Добавить(2);
    Массив.Добавить(3);

    Массив.Вставить(0, 10);
    юТест.ПроверитьРавенство(Массив[0], 10);
    юТест.ПроверитьРавенство(Массив.Количество(), 3);

    Массив.Вставить(4, 10);
    юТест.ПроверитьРавенство(Массив[4], 10);
    юТест.ПроверитьРавенство(Массив.Количество(), 5);

    Массив.Вставить(0);
    юТест.ПроверитьРавенство(Массив[0], Неопределено);

    БылоИсключение = Ложь;
    Попытка
        Массив.Вставить(-1);
    Исключение
        БылоИсключение = Истина;
    КонецПопытки;
    юТест.ПроверитьРавенство(БылоИсключение, Истина);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьНайти() Экспорт

    Массив = Новый Массив;
    Массив.Добавить(1);
    Массив.Добавить(2);
    Массив.Добавить(3);

    ЧтоИщем = 2;

    юТест.ПроверитьРавенство(Массив.Найти(ЧтоИщем), 1);
    юТест.ПроверитьРавенство(Массив.Найти(2), 1);
    юТест.ПроверитьРавенство(Массив.Найти(10), Неопределено);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьВГраница() Экспорт

    Массив = Новый Массив;
    Массив.Добавить(1);
    Массив.Добавить(2);

    юТест.ПроверитьРавенство(Массив.ВГраница(), 1);

    Массив.Очистить();
    юТест.ПроверитьРавенство(Массив.ВГраница(), -1);

КонецПроцедуры