Перем юТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	юТест = ЮнитТестирование;

	ВсеТесты = Новый Массив;
	ВсеТесты.Добавить("ТестДолжен_ПроверитьСозданиеОбъектаСравнениеЗначений");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьСравнениеЧисел");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьСравнениеДат");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьСравнениеСтрок");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьСравнениеБулева");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьСравнениеОбъектов");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьСравнениеРазныхТипов");
	Возврат ВсеТесты;
КонецФункции

Процедура ТестДолжен_ПроверитьСозданиеОбъектаСравнениеЗначений() Экспорт

	Сравнение = Новый СравнениеЗначений;

КонецПроцедуры

Процедура ТестДолжен_ПроверитьСравнениеЧисел() Экспорт

	ПроверитьПростыеЗначения(0, 1);
	ПроверитьПростыеЗначения(-10, 10);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьСравнениеДат() Экспорт

	ПроверитьПростыеЗначения('20220101', '20220102');
	ПроверитьПростыеЗначения('00010101', '20220102');
	ПроверитьПростыеЗначения('00010101', '00010101000001');

КонецПроцедуры

Процедура ТестДолжен_ПроверитьСравнениеСтрок() Экспорт
	ПроверитьПростыеЗначения("а", "б");
	ПроверитьПростыеЗначения("А", "а");
	ПроверитьПростыеЗначения("а", "ааа");
	ПроверитьПростыеЗначения("1", "111");
	ПроверитьПростыеЗначения("100", "11");
	ПроверитьПростыеЗначения("Ааа", "ааа");
	ПроверитьПростыеЗначения("Баааа", "ааааа");
КонецПроцедуры

Процедура ТестДолжен_ПроверитьСравнениеБулева() Экспорт
    ПроверитьПростыеЗначения(Ложь, Истина);
КонецПроцедуры

Процедура ПроверитьПростыеЗначения(Знач Меньшее, Знач Большее)

	Сравнение = Новый СравнениеЗначений;

	юТест.ПроверитьИстину(Сравнение.Сравнить(Меньшее, Большее) < 0);
	юТест.ПроверитьИстину(Сравнение.Сравнить(Большее, Меньшее) > 0);
	юТест.ПроверитьИстину(Сравнение.Сравнить(Большее, Большее) = 0);
	юТест.ПроверитьИстину(Сравнение.Сравнить(Меньшее, Меньшее) = 0);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьСравнениеОбъектов() Экспорт

	СравнитьЗначенияТипов(
		Новый Массив, Новый Массив,
		Новый Структура, Новый Структура);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьСравнениеРазныхТипов() Экспорт

	СравнитьЗначенияТипов(
		1, 2,
		Новый Структура, Новый Структура);

	СравнитьЗначенияТипов(
		"Й", "Ё",
		Новый Массив, Новый Массив);

	СравнитьЗначенияТипов(
		1, 2,
		"Й", "Ё");

	СравнитьЗначенияТипов(
		1, 2,
		Ложь, Истина);

	СравнитьЗначенияТипов(
		"Й", "Ё",
		'20221018', '20221018010000');

КонецПроцедуры

// А1, А2 - значения типа А
// Б1, Б2 - значения типа Б
Процедура СравнитьЗначенияТипов(Знач А1, Знач А2,
	Знач Б1, Знач Б2)

	Сравнение = Новый СравнениеЗначений;

	Результат_А1_Б1 = Нормировать(Сравнение.Сравнить(А1, Б1));
	Результат_А1_Б2 = Нормировать(Сравнение.Сравнить(А1, Б2));
	Результат_А1_А1 = Нормировать(Сравнение.Сравнить(А1, А1));
	Результат_Б1_Б1 = Нормировать(Сравнение.Сравнить(Б1, Б1));

	// Тип А не равен Типу Б
	юТест.ПроверитьНеравенство(Результат_А1_Б1, 0);

	// если Тип А больше(меньше) одного значения Типа Б, то он больше(меньше) другого значения Типа Б
	юТест.ПроверитьРавенство(Результат_А1_Б1, Результат_А1_Б2);

	// Значение Типа А равно само себе
	юТест.ПроверитьРавенство(Результат_А1_А1, 0);

	// Значение Типа Б равно само себе
	юТест.ПроверитьРавенство(Результат_Б1_Б1, 0);

КонецПроцедуры

Функция Нормировать(Знач РезультатСравнения)

	Если РезультатСравнения < 0 Тогда
		Возврат -1;
	ИначеЕсли РезультатСравнения > 0 Тогда
		Возврат 1;
	Иначе
		Возврат 0;
	КонецЕсли;

КонецФункции
