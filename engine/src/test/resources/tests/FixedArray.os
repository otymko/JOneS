#Использовать asserts

///////////////////////////////////////////////////////////////////////
// Тест класса ФиксированныйМассив
///////////////////////////////////////////////////////////////////////

Перем юТест;

////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	юТест = ЮнитТестирование;

	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_СоздатьФиксированныйМассивПоМассиву");
	ВсеТесты.Добавить("ТестДолжен_СоздатьМассивПоФиксированномуМассиву");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьНеизменностьФиксированногоМассива");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьОтсутствиеНенужныхМетодов");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьМетодНайти");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьПереборВЦикле");

	Возврат ВсеТесты;
КонецФункции

Процедура ТестДолжен_СоздатьМассивПоФиксированномуМассиву() Экспорт
	Массив = Новый Массив;
	Количество = 10;

	Пока Количество > 0 Цикл
		Массив.Добавить(Количество);
		Количество = Количество - 1;
	КонецЦикла;

	ФиксированныйМассив = Новый ФиксированныйМассив(Массив);

	НовыйМассив = Новый Массив(ФиксированныйМассив);

    юТест.ПроверитьТип(НовыйМассив, Тип("Массив"));
    юТест.ПроверитьРавенство(НовыйМассив.Количество(), Массив.Количество(), "количество элементов исходной и полученной структуры совпадут");
    юТест.ПроверитьРавенство(НовыйМассив.ВГраница(), Массив.ВГраница(), "верхние границы массивов совпадут");

	Для Инд = 0 По НовыйМассив.ВГраница() Цикл
	    юТест.ПроверитьРавенство(НовыйМассив[Инд], Массив[Инд], "каждый элемент массив совпадает");
	КонецЦикла;
КонецПроцедуры

Процедура ТестДолжен_СоздатьФиксированныйМассивПоМассиву() Экспорт

	Массив = Новый Массив;

	Количество = 10;

	Пока Количество > 0 Цикл
		Массив.Добавить(Количество);
		Количество = Количество - 1;
	КонецЦикла;

	ФиксированныйМассив = Новый ФиксированныйМассив(Массив);

    юТест.ПроверитьТип(ФиксированныйМассив, Тип("ФиксированныйМассив"));
    юТест.ПроверитьРавенство(ФиксированныйМассив.Количество(), Массив.Количество(), "количество элементов исходной и полученной структуры совпадут");
    юТест.ПроверитьРавенство(ФиксированныйМассив.ВГраница(), Массив.ВГраница(), "верхние границы массивов совпадут");

	Для Инд = 0 По ФиксированныйМассив.ВГраница() Цикл
	    юТест.ПроверитьРавенство(ФиксированныйМассив[Инд], Массив[Инд], "каждый элемент массив совпадает");
	КонецЦикла;

КонецПроцедуры

Процедура ТестДолжен_ПроверитьНеизменностьФиксированногоМассива() Экспорт

	Массив = Новый Массив;

	Количество = 10;

	Пока Количество > 0 Цикл
		Массив.Добавить(Количество);
		Количество = Количество - 1;
	КонецЦикла;

	ФиксированныйМассив = Новый ФиксированныйМассив(Массив);

	Массив[0] = 0;
	юТест.ПроверитьРавенство(10, ФиксированныйМассив[0], "не изменился элемент массива");

	Массив.Очистить();
	юТест.ПроверитьРавенство(10, ФиксированныйМассив.Количество(), "не изменился размер массива");

	Попытка
		ФиксированныйМассив[0] = 5;
	Исключение
	    юТест.ПроверитьРавенство(10, ФиксированныйМассив[0], "не изменился элемент массива");
		Если Не ИнформацияОбОшибке().Описание = "Индексированное значение доступно только для чтения" Тогда
			ВызватьИсключение;
		КонецЕсли;

		Возврат;
	КонецПопытки;

	ВызватьИсключение "Значение в фиксированный массив было установлено";

КонецПроцедуры

Процедура ТестДолжен_ПроверитьОтсутствиеНенужныхМетодов() Экспорт

	ФиксированныйМассив = Новый ФиксированныйМассив(Новый Массив);

	Попытка

		ФиксированныйМассив.Добавить(0);
		Обнаружен = Истина;

	Исключение
		Обнаружен = Ложь;
	КонецПопытки;

	Если Обнаружен Тогда
		ВызватьИсключение "Обнаружен метод Добавить!";
	КонецЕсли;

	Попытка

		ФиксированныйМассив.Вставить(0, 0);
		Обнаружен = Истина;

	Исключение
		Обнаружен = Ложь;
	КонецПопытки;

	Если Обнаружен Тогда
		ВызватьИсключение "Обнаружен метод Вставить!";
	КонецЕсли;

	Попытка

		ФиксированныйМассив.Удалить(0);
		Обнаружен = Истина;

	Исключение
		Обнаружен = Ложь;
	КонецПопытки;

	Если Обнаружен Тогда
		ВызватьИсключение "Обнаружен метод Удалить!";
	КонецЕсли;

	Попытка

		ФиксированныйМассив.Очистить();
		Обнаружен = Истина;

	Исключение
		Обнаружен = Ложь;
	КонецПопытки;

	Если Обнаружен Тогда
		ВызватьИсключение "Обнаружен метод Очистить!";
	КонецЕсли;

КонецПроцедуры

Процедура ТестДолжен_ПроверитьМетодНайти()
    Массив = Новый Массив();
    Массив.Добавить("1");
    Массив.Добавить(2);
    ФиксированныйМассив = Новый ФиксированныйМассив(Массив);

    юТест.ПроверитьРавенство(0, ФиксированныйМассив.Найти("1"));
    юТест.ПроверитьРавенство(1, ФиксированныйМассив.Найти(2));
    юТест.ПроверитьРавенство(Неопределено, ФиксированныйМассив.Найти("2"));
КонецПроцедуры

Процедура ТестДолжен_ПроверитьПереборВЦикле()
    Массив = Новый Массив();
    Массив.Добавить("1");
    Массив.Добавить(2);
    ФиксированныйМассив = Новый ФиксированныйМассив(Массив);

    ПоследнееЗначение = Неопределено;
    Для Каждого Значение Из ФиксированныйМассив Цикл
        ПоследнееЗначение = Значение;
    КонецЦикла;

    юТест.ПроверитьРавенство(2, ПоследнееЗначение);
КонецПроцедуры