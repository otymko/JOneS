Перем юТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	юТест = ЮнитТестирование;

	ВсеТесты = Новый Массив;
	ВсеТесты.Добавить("Тест_ДолженПроверитьСвойствоОбъекта");
	ВсеТесты.Добавить("Тест_ДолженПроверитьМетоды");

	Возврат ВсеТесты;
КонецФункции

Процедура Тест_ДолженПроверитьСвойствоОбъекта()
    ОжидаемоеРасширение = "txt";
    ПутьКФайлу = ПолучитьИмяВременногоФайла(ОжидаемоеРасширение);
    ЧастиПути = СтрРазделить(ПутьКФайлу, "/");
    ОжидаемоеИмя = ЧастиПути[ЧастиПути.Количество() - 1]
    ОжидаемоеИмяБезРасширения = Лев(ОжидаемоеИмя, СтрДлина(ОжидаемоеИмя) - СтрДлина(ОжидаемоеРасширение) - 2);
    Сообщить("ИмяБез = " + ОжидаемоеИмяБезРасширения)
    ОжидаемыйПуть = Лев(ПутьКФайлу, СтрДлина(ПутьКФайлу) - СтрДлина(ОжидаемоеИмя));

    Файл = Новый Файл(ПутьКФайлу);

    Имя = Файл.Имя;
    юТест.ПроверитьРавенство(ОжидаемоеИмя, Имя);

    ИмяБезРасширения = Файл.ИмяБезРасширения;
    юТест.ПроверитьРавенство(ОжидаемоеИмяБезРасширения, ИмяБезРасширения);

    Расширение = Файл.Расширение;
    юТест.ПроверитьРавенство(ОжидаемоеРасширение, Расширение);

    ПолноеИмя = Файл.ПолноеИмя;
    юТест.ПроверитьРавенство(ПутьКФайлу, ПолноеИмя);

    Путь = Файл.Путь;
    юТест.ПроверитьРавенство(ОжидаемыйПуть, Путь);
КонецПроцедуры

Процедура Тест_ДолженПроверитьМетоды()
    ПутьКФайлу = ПолучитьИмяВременногоФайла();

    Файл = Новый Файл(ПутьКФайлу);
    юТест.ПроверитьЛожь(Файл.Существует());
КонецПроцедуры